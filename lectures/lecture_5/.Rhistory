    pdf(file = 'simpleGAM.pdf', width = 9, height = 3 )#, bg='white')#
        par(mfrow=c(1,3))#
        plot(simpleGAM)#
        #
        #
    dev.off()
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
    pdf(file = 'simpleGAM.pdf', width = 9, height = 3 )#, bg='white')#
        par(mfrow=c(1,3), mar=c(3,3,1,1), mgp=c(2,0.8,0))#
        plot(simpleGAM)#
        #
        #
    dev.off()
summary(simpleGAM)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
    figDat$simpleLM.pred <- predict(simpleLM)#
    figDat$simpleGAM.pred <- predict(simpleGAM)
max(figDat$Rich)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
    pdf(file = 'simplePreds.pdf', width = 9, height = 4.5 )#, bg='white')#
        col <- heat.colors(20)#
        atRich <- seq(0,700, length=21)#
        print(spplot(figDat, 'simpleLM.pred', col.regions=col, at=atRich, main='Linear Model (r2 = 0.45)',  par.settings=theme.loPadding), split=c(1,1,1,3), more=TRUE)#
        print(spplot(figDat, 'Rich', col.regions=col, at=atRich, main='Observed richness',  par.settings=theme.loPadding), split=c(1,1,1,3), more=TRUE)#
        print(spplot(figDat, 'simpleGAM.pred', col.regions=col, at=atRich, main='GAM (r2 = 0.57)',  par.settings=theme.loPadding), split=c(1,3,1,3))#
    dev.off()
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
    pdf(file = 'simplePreds.pdf', width = 9, height = 4.5 )#, bg='white')#
        col <- heat.colors(20)#
        atRich <- seq(0,700, length=21)#
        print(spplot(figDat, 'simpleLM.pred', col.regions=col, at=atRich, main='Linear Model (r2 = 0.45)',  par.settings=theme.loPadding), split=c(1,1,3,1), more=TRUE)#
        print(spplot(figDat, 'Rich', col.regions=col, at=atRich, main='Observed richness',  par.settings=theme.loPadding), split=c(2,1,3,1), more=TRUE)#
        print(spplot(figDat, 'simpleGAM.pred', col.regions=col, at=atRich, main='GAM (r2 = 0.57)',  par.settings=theme.loPadding), split=c(3,1,3,1))#
    dev.off()
?spdep
help(package=spdep)
?moran
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
    figDat.nb <- dnearneigh(figDat, d1=0, d2=sqrt(2*96.5^2))#
    figDat.lw <- nb2listw(figDat.nb)#
    moran.test(figDat$Rich, figDat.lw)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
    figDat.nb <- knearneigh(figDat, k=8)#
    figDat.lw <- nb2listw(figDat.nb)#
    moran.test(figDat$Rich, figDat.lw)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
    figDat.nb <- knn2nb( knearneigh(figDat, k=8))#
    figDat.lw <- nb2listw(figDat.nb)#
    moran.test(figDat$Rich, figDat.lw)
?morantest
?moran.test
9.221258e-01
plot(richCorrel)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
        plot(richCorrel$n)
str(richCorrel)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
        plot(n ~ mean.of.class, data=richCorrel)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
        plot( richCorrel$mean.of.class, richCorrel$n)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
        plot( richCorrel$mean.of.class, richCorrel$n, xlim='Distance (km)', ylim='Count')
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
        par(mfrow=c(1,2))#
        plot( richCorrel$mean.of.class, richCorrel$n, xlab='Distance (km)', ylab='Count')#
        plot( richCorrel$mean.of.class, richCorrel$correlation, xlab='Distance (km)', ylab='Count')
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
        par(mfrow=c(1,2), mar=c(3,3,1,1), mgp=c(2,0.8,0))#
        plot( richCorrel$mean.of.class, richCorrel$n, xlab='Distance (km)', ylab='Count')#
        plot( richCorrel$mean.of.class, richCorrel$correlation, xlab='Distance (km)', ylab='Correlation', pch)#
        abline(h=0)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
        par(mfrow=c(1,2), mar=c(3,3,1,1), mgp=c(2,0.8,0))#
        with(richCorrel, plot(mean.of.class, n, xlab='Distance (km)', ylab='Count'))#
        with(richCorrel, plot(mean.of.class, correlation, xlab='Distance (km)', ylab='Correlation', pch=ifelse(p < 0.05, 21,20)))#
        abline(h=0)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
        par(mfrow=c(1,2), mar=c(3,3,1,1), mgp=c(2,0.8,0))#
        with(richCorrel, plot(mean.of.class, n, xlab='Distance (km)', ylab='Count'))#
        with(richCorrel, plot(mean.of.class, correlation, xlab='Distance (km)', ylab='Correlation', pch=ifelse(p < 0.05, 22, 21)))#
        abline(h=0)
plot(1:10, pch=15:24, cex=5)
?par
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
        par(mfrow=c(1,2), mar=c(3,3,1,1), mgp=c(2,0.8,0))#
        with(richCorrel, plot(mean.of.class, n, xlab='Distance (km)', ylab='Count'))#
        with(richCorrel, plot(mean.of.class, correlation, xlab='Distance (km)', ylab='Correlation', pch=21, bg=ifelse(p < 0.05, 'black', 'white')))#
        abline(h=0)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
    pdf(file = 'richAutocorrelation.pdf', width = 9, height = 4.5 )#, bg='white')#
        par(mfrow=c(1,2), mar=c(3,3,1,1), mgp=c(2,0.8,0))#
        with(richCorrel, plot(mean.of.class, n, xlab='Distance (km)', ylab='Count'))#
        with(richCorrel, plot(mean.of.class, correlation, xlab='Distance (km)', ylab='Correlation', pch=21, bg=ifelse(p < 0.05, 'black', 'white')))#
        abline(h=0)#
    dev.off()
sum(richCorrel$n)
2484*2484/2
2484*2483/2
diff(richCorrel$mean.of.class)
?Variogram
install.packages('gstat')
library(gstat)
?variogram
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
    variogram(Rich ~ 1, data=figDat, width=100)
    variogram(Rich ~ 1, data=figDat)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
cellData <- read.table("/Users/dorme/Work/ADHoC/ADHoC_Database/Behr_GridTable.txt")[,c(1,4,5)]#
names(cellData) <- c('gridid', 'e_centre_behr', 'n_centre_behr')#
#
cellData$e_centre_behr <- round(cellData$e_centre_behr / 1000, 2)#
cellData$n_centre_behr <- round(cellData$n_centre_behr / 1000, 2)#
#
# get the data and add in the behr coords#
figDat <- read.table('/Users/dorme/Work/Students/Lynsey_McInnes/MSc_AfricaData/ImpermeabilityMS/Figures/ImpermDataFuller.txt')#
figDat <- merge(cellData, figDat)#
#
# drop some fringing space#
figDat <- subset(figDat, e_centre_behr > -1.9e3 & n_centre_behr < 3e3) #
#
# drop down to just the main variables for the demo#
figDat <- subset(figDat, select=c(e_centre_behr, n_centre_behr, Rich, MeanAET, MeanElev, MeanAnnTemp))#
figDat <- figDat[complete.cases(figDat),]
coordinates(figDat) <- e_centre_behr + n_centre_behr
coordinates(figDat) <- ~ e_centre_behr + n_centre_behr
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
        spplot(figDat, 'Rich', col.regions=heat.colors(20), scales=list(draw=TRUE), par.settings=theme.loPadding)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
gridded(figDat) <- TRUE
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
# get the land cell data in from the db#
cellData <- read.table("/Users/dorme/Work/ADHoC/ADHoC_Database/Behr_GridTable.txt")[,c(1,4,5)]#
names(cellData) <- c('gridid', 'e_centre_behr', 'n_centre_behr')#
#
# trim off minor diffs in coords#
cellData$e_centre_behr <- round(cellData$e_centre_behr / 1000, 1)#
cellData$n_centre_behr <- round(cellData$n_centre_behr / 1000, 1)#
#
# get the data and add in the behr coords#
figDat <- read.table('/Users/dorme/Work/Students/Lynsey_McInnes/MSc_AfricaData/ImpermeabilityMS/Figures/ImpermDataFuller.txt')#
figDat <- merge(cellData, figDat)#
#
# drop some fringing space#
figDat <- subset(figDat, e_centre_behr > -1.9e3 & n_centre_behr < 3e3) #
#
# drop down to just the main variables for the demo#
figDat <- subset(figDat, select=c(e_centre_behr, n_centre_behr, Rich, MeanAET, MeanElev, MeanAnnTemp))#
figDat <- figDat[complete.cases(figDat),]#
#
# convert to a spatial pixel data frame#
coordinates(figDat) <-  ~ e_centre_behr + n_centre_behr#
gridded(figDat) <- TRUE
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
cellData <- read.table("/Users/dorme/Work/ADHoC/ADHoC_Database/Behr_GridTable.txt")[,c(1,4,5)]#
names(cellData) <- c('gridid', 'e_centre_behr', 'n_centre_behr')#
#
# trim off minor diffs in coords#
cellData$e_centre_behr <- round(cellData$e_centre_behr / 1000, 0)#
cellData$n_centre_behr <- round(cellData$n_centre_behr / 1000, 0)#
#
# get the data and add in the behr coords#
figDat <- read.table('/Users/dorme/Work/Students/Lynsey_McInnes/MSc_AfricaData/ImpermeabilityMS/Figures/ImpermDataFuller.txt')#
figDat <- merge(cellData, figDat)#
#
# drop some fringing space#
figDat <- subset(figDat, e_centre_behr > -1.9e3 & n_centre_behr < 3e3) #
#
# drop down to just the main variables for the demo#
figDat <- subset(figDat, select=c(e_centre_behr, n_centre_behr, Rich, MeanAET, MeanElev, MeanAnnTemp))#
figDat <- figDat[complete.cases(figDat),]#
#
# convert to a spatial pixel data frame#
coordinates(figDat) <-  ~ e_centre_behr + n_centre_behr#
gridded(figDat) <- TRUE
str(figDat)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
cellData <- read.table("/Users/dorme/Work/ADHoC/ADHoC_Database/Behr_GridTable.txt")[,c(1,4,5)]#
names(cellData) <- c('gridid', 'e_centre_behr', 'n_centre_behr')#
#
# trim off minor diffs in coords#
cellData$e_centre_behr <- round(cellData$e_centre_behr / 1000, 3)#
cellData$n_centre_behr <- round(cellData$n_centre_behr / 1000, 3)
diff(unique(cellData$e_centre_behr))
cellData <- read.table("/Users/dorme/Work/ADHoC/ADHoC_Database/Behr_GridTable.txt")[,c(1,4,5)]#
names(cellData) <- c('gridid', 'e_centre_behr', 'n_centre_behr')#
#
# trim off minor diffs in coords#
cellData$e_centre_behr <- round(cellData$e_centre_behr / 1000, 1)#
cellData$n_centre_behr <- round(cellData$n_centre_behr / 1000, 3)
diff(unique(cellData$e_centre_behr))
cellData <- read.table("/Users/dorme/Work/ADHoC/ADHoC_Database/Behr_GridTable.txt")[,c(1,4,5)]#
names(cellData) <- c('gridid', 'e_centre_behr', 'n_centre_behr')#
#
# trim off minor diffs in coords#
cellData$e_centre_behr <- round(cellData$e_centre_behr / 1000, 3)#
cellData$n_centre_behr <- round(cellData$n_centre_behr / 1000, 3)
table(unique(cellData$e_centre_behr))
table(diff(unique(cellData$e_centre_behr)))
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
cellData <- read.table("/Users/dorme/Work/ADHoC/ADHoC_Database/Behr_GridTable.txt")[,c(1,4,5)]#
names(cellData) <- c('gridid', 'e_centre_behr', 'n_centre_behr')
table(diff(unique(cellData$e_centre_behr)))
table(round(diff(unique(cellData$e_centre_behr)),2))
table(ceiling(diff(unique(cellData$e_centre_behr)),2))
table(ceiling(diff(unique(cellData$e_centre_behr))))
table(ceiling(diff(unique(cellData$e_centre_behr)),1))
table(round(diff(unique(cellData$e_centre_behr)),1))
table(round(diff(unique(cellData$n_centre_behr)),1))
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
cellData$e_centre_behr <- round(cellData$e_centre_behr, 1) / 1000#
cellData$n_centre_behr <- round(cellData$n_centre_behr, 1) / 1000#
#
# get the data and add in the behr coords#
figDat <- read.table('/Users/dorme/Work/Students/Lynsey_McInnes/MSc_AfricaData/ImpermeabilityMS/Figures/ImpermDataFuller.txt')#
figDat <- merge(cellData, figDat)#
#
# drop some fringing space#
figDat <- subset(figDat, e_centre_behr > -1.9e3 & n_centre_behr < 3e3) #
#
# drop down to just the main variables for the demo#
figDat <- subset(figDat, select=c(e_centre_behr, n_centre_behr, Rich, MeanAET, MeanElev, MeanAnnTemp))#
figDat <- figDat[complete.cases(figDat),]#
#
# convert to a spatial pixel data frame#
coordinates(figDat) <-  ~ e_centre_behr + n_centre_behr#
gridded(figDat) <- TRUE
diff(unique(figDat$e_centre_behr)))
diff(unique(figDat$e_centre_behr))
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
cellData <- read.table("/Users/dorme/Work/ADHoC/ADHoC_Database/Behr_GridTable.txt")[,c(1,4,5)]#
names(cellData) <- c('gridid', 'e_centre_behr', 'n_centre_behr')#
#
# trim off minor diffs in coords#
cellData$e_centre_behr <- round(cellData$e_centre_behr, 1) / 1000#
cellData$n_centre_behr <- round(cellData$n_centre_behr, 1) / 1000
diff(unique(cellData$e_centre_behr))
table(diff(unique(cellData$e_centre_behr)))
str(cellData)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
cellData <- read.table("/Users/dorme/Work/ADHoC/ADHoC_Database/Behr_GridTable.txt")[,c(1,4,5)]#
names(cellData) <- c('gridid', 'e_centre_behr', 'n_centre_behr')
table(diff(unique(cellData$e_centre_behr)))
diff(unique(round(cellData$e_centre_behr, 1)))
table(round(cellData$e_centre_behr, 1))
cellData <- read.table("/Users/dorme/Work/ADHoC/ADHoC_Database/Behr_GridTable.txt")[,c(1,4,5)]#
names(cellData) <- c('gridid', 'e_centre_behr', 'n_centre_behr')
cellData$e_centre_behr[1:10]
print(cellData$e_centre_behr[1:10], width=20)
print(cellData$e_centre_behr[1:10], digits=20)
print(cellData$e_centre_behr[1:10], digits=200)
print(cellData$e_centre_behr[1:10], digits=30)
print(cellData$e_centre_behr[1:10], digits=24)
print(cellData$e_centre_behr[1:10], digits=20)
plot(n_centre_behr ~ e_centre_behr, data=cellData)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
# get the data and add in the behr coords#
figDat <- read.table('/Users/dorme/Work/Students/Lynsey_McInnes/MSc_AfricaData/ImpermeabilityMS/Figures/ImpermDataFuller.txt')#
figDat <- merge(cellData, figDat)
str(figDat)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
#
grid.id <- as.vector(mapply(function(x){1:360 + x*360}, 151:0, SIMPLIFY=T))#
#
col <- rep(1:360, times=152)#
row <- rep(152:1, each=360)#
#
cellsize <- 96486.268#
e_centre_behr <- rep(seq(cellsize * -179.5, cellsize * 179.5, cellsize), times=152)#
n_centre_behr <- rep(seq(cellsize * 75.5, cellsize * -75.5, -cellsize), each=360)#
#
cellData <- data.frame(gridid, e_centre_behr, n_centre_behr)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
gridid <- as.vector(mapply(function(x){1:360 + x*360}, 151:0, SIMPLIFY=T))#
#
col <- rep(1:360, times=152)#
row <- rep(152:1, each=360)#
#
cellsize <- 96486.268#
e_centre_behr <- rep(seq(cellsize * -179.5, cellsize * 179.5, cellsize), times=152)#
n_centre_behr <- rep(seq(cellsize * 75.5, cellsize * -75.5, -cellsize), each=360)#
#
cellData <- data.frame(gridid, e_centre_behr, n_centre_behr)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
# get the data and add in the behr coords#
figDat <- read.table('/Users/dorme/Work/Students/Lynsey_McInnes/MSc_AfricaData/ImpermeabilityMS/Figures/ImpermDataFuller.txt')#
figDat <- merge(cellData, figDat)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
#
#
# drop some fringing space#
figDat <- subset(figDat, e_centre_behr > -1.9e3 & n_centre_behr < 3e3) #
#
# drop down to just the main variables for the demo#
figDat <- subset(figDat, select=c(e_centre_behr, n_centre_behr, Rich, MeanAET, MeanElev, MeanAnnTemp))#
figDat <- figDat[complete.cases(figDat),]
#
#
#
coordinates(figDat) <-  ~ e_centre_behr + n_centre_behr#
gridded(figDat) <- TRUE
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
    variogram(Rich ~ 1, data=figDat, width=100)
summary(figDat)
variogram
methods(variogram)
gstat:::variogram.formula
?gstat
gstat:::variogram.gstat
gstat:::variogram.default
    variogram(Rich ~ 1, data=figDat, width=100, map=TRUE)
?variogram
    variogram(Rich ~ 1, data=figDat, width=100, map=TRUE, cutoff=2000)
debug(gstat)
    variogram(Rich ~ 1, data=figDat, width=100)
tmp <-    variogram(Rich ~ 1, data=figDat, width=100)
c
str(tmp)
plot(tmp)
plot(tmp)
dev.off()
dev.off()
dev.off()
plot(tmp)
debug(print.gstat)
debug(gstat:::print.gstat)
tmp <-    variogram(Rich ~ 1, data=figDat, width=100)
tmp <-    variogram(Rich ~ 1, data=figDat, width=100)
str(g)
debug(variogram)
variogram
variogram
work you absolute cunt
the cells are fucking square you shit
variogram.gstat
debug(variogram.gstat)
debug(gstat::variogram.gstat)
debug(gstat:::variogram.gstat)
tmp <-    variogram(Rich ~ 1, data=figDat, width=100)
i
methods(variogram)
debug(gstat:::variogram.default)
tmp <-    variogram(Rich ~ 1, data=figDat, width=100)
c
traceback()
?variogram
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
    variogram(figDat$Rich, coordinates(figDat), width=100)
c
c
?variogram
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
    variogram(list(figDat$Rich), list(coordinates(figDat)), width=100)
c
c
?variogram
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
richCorrel <- variogram(list(figDat$Rich), list(coordinates(figDat)), width=100)
c
c
richVariog
    richVariog <- variogram(list(figDat$Rich), list(coordinates(figDat)), width=100)
c
c
undebug()
undebug(variogram.default)
undebug(gstat:::variogram.default)
    richVariog <- variogram(list(figDat$Rich), list(coordinates(figDat)), width=100)
c
undebug(gstat:::variogram)
    richVariog <- variogram(list(figDat$Rich), list(coordinates(figDat)), width=100)
plot(richVariog)
    richVariog <- variogram(list(figDat$Rich), list(coordinates(figDat)), width=10000)
plot(richVariog)
?variogram
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
gridid <- as.vector(mapply(function(x){1:360 + x*360}, 151:0, SIMPLIFY=T))#
#
col <- rep(1:360, times=152)#
row <- rep(152:1, each=360)#
#
cellsize <- 96.486268#
e_centre_behr <- rep(seq(cellsize * -179.5, cellsize * 179.5, cellsize), times=152)#
n_centre_behr <- rep(seq(cellsize * 75.5, cellsize * -75.5, -cellsize), each=360)#
#
cellData <- data.frame(gridid, e_centre_behr, n_centre_behr)#
#
# get the data and add in the behr coords#
figDat <- read.table('/Users/dorme/Work/Students/Lynsey_McInnes/MSc_AfricaData/ImpermeabilityMS/Figures/ImpermDataFuller.txt')#
figDat <- merge(cellData, figDat)#
#
# drop some fringing space#
figDat <- subset(figDat, e_centre_behr > -1.9e3 & n_centre_behr < 3e3) #
#
# drop down to just the main variables for the demo#
figDat <- subset(figDat, select=c(e_centre_behr, n_centre_behr, Rich, MeanAET, MeanElev, MeanAnnTemp))#
figDat <- figDat[complete.cases(figDat),]#
#
# convert to a spatial pixel data frame#
# figCoords <- SpatialPoints(figDat[, c("e_centre_behr", "n_centre_behr")])#
# figDat <- SpatialPixelsDataFrame(figCoords, data=figDat, tolerance=0.01)#
#
coordinates(figDat) <-  ~ e_centre_behr + n_centre_behr#
gridded(figDat) <- TRUE
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
        spplot(figDat, 'Rich', col.regions=heat.colors(20), scales=list(draw=TRUE), par.settings=theme.loPadding)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
    richVariog <- variogram(list(figDat$Rich), list(coordinates(figDat)), width=100)
str(richVariog)
plot(richVariog)
    richVariog <- variogram(list(figDat$Rich), list(coordinates(figDat)), width=100, cutoff=10000)
plot(richVariog)
sum(richVariog$np)
?lisa
?lisa
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
    richLisa <- with(figDat@data, lisa(e_centre_behr, n_centre_behr, Rich, neigh=8, resamp=0))
    richLisa <- with(figDat@data, lisa(e_centre_behr, n_centre_behr, Rich, neigh=8, resamp=0))
debug(lisa)
    richLisa <- with(figDat@data, lisa(e_centre_behr, n_centre_behr, Rich, neigh=8, resamp=0))
str(x)
str(figDat)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
    richLisa <- lisa(figCoords[,1], figCoords[,2], figDat$Rich, neigh=8, resamp=0)
Q
undebug(lisa)
    richLisa <- lisa(figCoords[,1], figCoords[,2], figDat$Rich, neigh=8, resamp=0)
figCoords
str(figCoords)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
    figCoords <- coordinates(figDat)@coords#
    richLisa <- lisa(figCoords[,1], figCoords[,2], figDat$Rich, neigh=8, resamp=0)
str(figCoords)
    figCoords <- coordinates(figDat)
str(figCoords)
setwd('/Users/dorme/Talks & Teaching/SpatialMethods')
    figCoords <- coordinates(figDat)#
    richLisa <- lisa(figCoords[,1], figCoords[,2], figDat$Rich, neigh=8, resamp=0)
plot(richLisa)
str(richLisa)
    figCoords <- coordinates(figDat)#
    richLisa <- lisa(figCoords[,1], figCoords[,2], figDat$Rich, neigh=8, resamp=1)
str(richLisa)
summary(richLisa)
summary(richLisa$dmean)
    figCoords <- coordinates(figDat)#
    richLisa <- lisa(figCoords[,1], figCoords[,2], figDat$Rich, neigh=8, resamp=10)
str(richLisa)
str(richLisa$n)
summary(richLisa$n)
?lisa
#first generate some sample data#
    x <- expand.grid(1:20, 1:5)[,1]#
    y <- expand.grid(1:20, 1:5)[,2]#
#
#z data from an exponential random field#
    z <- rmvn.spa(x=x, y=y, p=2, method="exp")
z
fit1 <- lisa(x=x, y=y, z=z, neigh=3, resamp=100)
plot(fit1)
x
y
z
?plot.lisa
